{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x2e30D40a113f3A098a6f51D614691853Bc181A5F",
      "txHash": "0xe4780c2a0c74ed0319ae9f465e6200e09b8ca12b93cda83fecf0ebaad9cd0fd5",
      "kind": "uups"
    },
    {
      "address": "0x0522127c9a5D2e6465d3093F7cfd9c45CA66F7ed",
      "txHash": "0xb0e0e8c845aeff9b394399439f5bed2a63bbbd7556e5b527f44ac634b3cf8f14",
      "kind": "uups"
    }
  ],
  "impls": {
    "a2ba47e3463baf33c3554d0d4cb05f15b8dd9c6676d61d9b6ab7a951eb6d4e6c": {
      "address": "0xFc63b6A629FB9d3f48F35F4cE011190ac970A311",
      "txHash": "0x18d9d02547cebde15d53066553c3e995ce7a6f428fe0d3667773bf33839b4537",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)15032_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:82"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:82"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:83"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)15032_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)15032_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "cad691b15de840338479bb16e775e69239cda81b60733feed3c19890eda8ad10": {
      "address": "0xca6832A259Da353D868eb9AA528f34EFE0c28c19",
      "txHash": "0x5b31fc2184975261ed628fdb7494668cafad458dc61a71201cf5e23a486bd6ca",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "isTaxablePair",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:10"
          },
          {
            "label": "isExcludedFromRouter",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:11"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:83"
          },
          {
            "label": "buyTax",
            "offset": 0,
            "slot": "304",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:88"
          },
          {
            "label": "sellTax",
            "offset": 0,
            "slot": "308",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:88"
          },
          {
            "label": "walletSellTaxes",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:90"
          },
          {
            "label": "taxDistribution",
            "offset": 0,
            "slot": "313",
            "type": "t_struct(TaxDistribution)3261_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:97"
          },
          {
            "label": "increaseSellTaxThreshold",
            "offset": 0,
            "slot": "314",
            "type": "t_uint16",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:98"
          },
          {
            "label": "isBlacklisted",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:100"
          },
          {
            "label": "pancakePair",
            "offset": 0,
            "slot": "316",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:101"
          },
          {
            "label": "rewardBalance",
            "offset": 0,
            "slot": "317",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:102"
          },
          {
            "label": "gasForDividends",
            "offset": 0,
            "slot": "318",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:102"
          },
          {
            "label": "dividendTracker",
            "offset": 0,
            "slot": "319",
            "type": "t_contract(CCMDividendTracker)5274",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:103"
          },
          {
            "label": "triggerDividendDistributionAt",
            "offset": 0,
            "slot": "320",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:103"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CCMDividendTracker)5274": {
            "label": "contract CCMDividendTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)": {
            "label": "mapping(address => struct CryptoContractManagement.WalletIndividualSellTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TaxDistribution)3261_storage": {
            "label": "struct CryptoContractManagement.TaxDistribution",
            "members": [
              {
                "label": "developmentWallet",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "developmentBuyTax",
                "type": "t_uint16",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "rewardBuyTax",
                "type": "t_uint16",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "autoLiquidityBuyTax",
                "type": "t_uint16",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "developmentSellTax",
                "type": "t_uint16",
                "offset": 26,
                "slot": "0"
              },
              {
                "label": "rewardSellTax",
                "type": "t_uint16",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "autoLiquiditySellTax",
                "type": "t_uint16",
                "offset": 30,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TaxStats)3230_storage": {
            "label": "struct CryptoContractManagement.TaxStats",
            "members": [
              {
                "label": "minTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "currentTax",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "resetTaxAfter",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "taxesEarned",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(WalletIndividualSellTax)3241_storage": {
            "label": "struct CryptoContractManagement.WalletIndividualSellTax",
            "members": [
              {
                "label": "cummulativeSellPercent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "dbf7074e79f3ee2e7fe6a04014ba1630b6e91a3f367612d1250567b68d1b7076": {
      "address": "0xD6020e11151f9e29F04e2966fb643372BE9bfE29",
      "txHash": "0x288940be01214e2b37127abeb8fc10980d108cb2a5c4cccb3d148291f0048eef",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)15032_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:83"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:83"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:84"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:86"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)15032_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)15032_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
