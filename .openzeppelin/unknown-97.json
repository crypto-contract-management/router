{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x8852e39C53641717e47E420820d3e6E018B1E658",
      "txHash": "0x2ad11034fdefdaef5214fc01cc1d9232e0726fdb1b948400cd8dfb26dd636779",
      "kind": "uups"
    },
    {
      "address": "0x6cE7F822075f716bdBd6A4b8aE3bA298581417ca",
      "txHash": "0xcf7cc3a78dc77a21613683bc3d21eea52c222ab7d86532e625343b288393b360",
      "kind": "uups"
    },
    {
      "address": "0x116d9090a7a11Cb4B207777aC6F2AE989bD505A3",
      "txHash": "0x9f7c57d7d07a5ff0c019ad814f5877c9d30af1960c6e13822f40c2cbbd9e7ecf",
      "kind": "uups"
    },
    {
      "address": "0x327947B4AdFC1576DE33b45ca1779EC31Dd9ddBA",
      "txHash": "0x327facd52dce893c533520e7ad5c75ffd7cf2d2e9242dd917c3fc80910dc890d",
      "kind": "uups"
    },
    {
      "address": "0xC5779647b53eECccd9e1179b999d76BdCfaB483E",
      "txHash": "0x7035d5d5a60d1c68a7555d54c86911ecbc5e477d483853194a71744ca070db85",
      "kind": "uups"
    },
    {
      "address": "0x8db21704Be5D2Cf3870Aa1EaD0613AC87Ac265A6",
      "txHash": "0x79c8360aea16700136cce2f6a168462ac0c4837fd8b8e61c0501216e2d6c6475",
      "kind": "uups"
    },
    {
      "address": "0xC1b530f51342aE128e17C0E2d84EbFb36a646C8e",
      "txHash": "0xe877bf26a0cc5777410f16296a98902b9f9c520acfb36c58973511ef5df613e5",
      "kind": "uups"
    },
    {
      "address": "0xc91E04F530d0d8e07cC4FfdbEDbDC40683BEbca6",
      "txHash": "0x1ca055a3785a5d2d71a4e972e4ea741edd53bf4321ae008804b74249a40a9ac5",
      "kind": "uups"
    },
    {
      "address": "0x54575E5c09014Fc790382961BB026C9bad907Ca2",
      "txHash": "0x037efde4466e1bd49bc47ee0babbbb624cb5166523f0aba605d43ca78d9ec22b",
      "kind": "uups"
    }
  ],
  "impls": {
    "271df759670a9950fbce57401bc36f3cec72cf429311c7e5482bcafa58957cc1": {
      "address": "0x1511e6df2519C26A6d30C6DaCD3Be98E4bC4E20a",
      "txHash": "0x2d3a3ce511017aedd369b4bd4788433af71fdeb9297f085b45f02beb09bfd49b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "tokenETHTaxes",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_array(t_struct(Tax)11536_storage)dyn_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:34"
          },
          {
            "label": "tokenETHTotalTaxes",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(AccumulatedTax)11549_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:36"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:38"
          },
          {
            "label": "tokenETHBaseTax",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)11588_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:55"
          },
          {
            "label": "totalETHTaxEarned",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:112"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:113"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:114"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Tax)11536_storage)dyn_storage": {
            "label": "struct TaxableRouter.Tax[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Tax)11536_storage)dyn_storage)": {
            "label": "mapping(address => struct TaxableRouter.Tax[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AccumulatedTax)11549_storage)": {
            "label": "mapping(address => struct TaxableRouter.AccumulatedTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)11588_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(AccumulatedTax)11549_storage": {
            "label": "struct TaxableRouter.AccumulatedTax",
            "members": [
              {
                "label": "totalOutTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalInTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "accumulatedOutTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accumulatedInTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "autoClaimAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimCounter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Tax)11536_storage": {
            "label": "struct TaxableRouter.Tax",
            "members": [
              {
                "label": "outTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)11588_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 21,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f5a639499addf6f12b601b1727e14aef5f564c622f0fa59a32a1bc78687df1b0": {
      "address": "0x1D6e03e4b832781B8aD79d850a9f58DF0E3D213b",
      "txHash": "0x271474544217bde5a0ba51f241e3fa621e826e3ee04f590b07da1d5070015820",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "tokenETHTaxes",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_array(t_struct(Tax)4019_storage)dyn_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:34"
          },
          {
            "label": "tokenETHTotalTaxes",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(AccumulatedTax)4032_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:36"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:38"
          },
          {
            "label": "tokenETHBaseTax",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)4071_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:55"
          },
          {
            "label": "totalETHTaxEarned",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:112"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:113"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:114"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Tax)4019_storage)dyn_storage": {
            "label": "struct TaxableRouter.Tax[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Tax)4019_storage)dyn_storage)": {
            "label": "mapping(address => struct TaxableRouter.Tax[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AccumulatedTax)4032_storage)": {
            "label": "mapping(address => struct TaxableRouter.AccumulatedTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)4071_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(AccumulatedTax)4032_storage": {
            "label": "struct TaxableRouter.AccumulatedTax",
            "members": [
              {
                "label": "totalOutTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalInTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "accumulatedOutTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accumulatedInTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "autoClaimAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimCounter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Tax)4019_storage": {
            "label": "struct TaxableRouter.Tax",
            "members": [
              {
                "label": "outTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)4071_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 21,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "049894cfdf3c6b516596e3e29c2f99f62062f66a3ab37a9145a0539c534bb96f": {
      "address": "0xa983F45a5bCa4922C581398C755e48063ecE7333",
      "txHash": "0xcf80e3e77efc7c13dd28fee2dd69827805070689eab669c05fe4de6a9466dcf7",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "tokenETHTaxes",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_array(t_struct(Tax)4043_storage)dyn_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:34"
          },
          {
            "label": "tokenETHTotalTaxes",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(AccumulatedTax)4056_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:36"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:38"
          },
          {
            "label": "tokenETHBaseTax",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)4095_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:55"
          },
          {
            "label": "totalETHTaxEarned",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:110"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:111"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Tax)4043_storage)dyn_storage": {
            "label": "struct TaxableRouter.Tax[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Tax)4043_storage)dyn_storage)": {
            "label": "mapping(address => struct TaxableRouter.Tax[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AccumulatedTax)4056_storage)": {
            "label": "mapping(address => struct TaxableRouter.AccumulatedTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)4095_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(AccumulatedTax)4056_storage": {
            "label": "struct TaxableRouter.AccumulatedTax",
            "members": [
              {
                "label": "totalOutTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalInTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "accumulatedOutTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accumulatedInTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "autoClaimAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimCounter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Tax)4043_storage": {
            "label": "struct TaxableRouter.Tax",
            "members": [
              {
                "label": "outTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)4095_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 21,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3c10efd978f10cf874c58b46c85f9564bbeba022f599e37d6b025fdbe3c92688": {
      "address": "0x8DDC917207C8Ab1e77d10a021c6Dd95248a33FBb",
      "txHash": "0x50dae91dc669d3b8b1152057f54bc1e22b58824a55e577d35ea959fcbe6adcb4",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "tokenETHTaxes",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_array(t_struct(Tax)4047_storage)dyn_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:34"
          },
          {
            "label": "tokenETHTotalTaxes",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(AccumulatedTax)4060_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:36"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:38"
          },
          {
            "label": "tokenETHBaseTax",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)4099_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:55"
          },
          {
            "label": "totalETHTaxEarned",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:110"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:111"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Tax)4047_storage)dyn_storage": {
            "label": "struct TaxableRouter.Tax[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Tax)4047_storage)dyn_storage)": {
            "label": "mapping(address => struct TaxableRouter.Tax[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AccumulatedTax)4060_storage)": {
            "label": "mapping(address => struct TaxableRouter.AccumulatedTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)4099_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(AccumulatedTax)4060_storage": {
            "label": "struct TaxableRouter.AccumulatedTax",
            "members": [
              {
                "label": "totalOutTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalInTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "accumulatedOutTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accumulatedInTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "autoClaimAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimCounter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Tax)4047_storage": {
            "label": "struct TaxableRouter.Tax",
            "members": [
              {
                "label": "outTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)4099_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 21,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ea3571595940165d8592a00c98323402d8a0a2b24996436d873767483b30a4ba": {
      "address": "0x37f324d67eE06a0e4a98149c2898296778109a95",
      "txHash": "0x42e64a960b22991b61acd76e781651086aae6cdc02256b5b906d0d33c60e706a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "tokenETHTaxes",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_array(t_struct(Tax)4047_storage)dyn_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:34"
          },
          {
            "label": "tokenETHTotalTaxes",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(AccumulatedTax)4060_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:36"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:38"
          },
          {
            "label": "tokenETHBaseTax",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)4099_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:55"
          },
          {
            "label": "totalETHTaxEarned",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:110"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:111"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Tax)4047_storage)dyn_storage": {
            "label": "struct TaxableRouter.Tax[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Tax)4047_storage)dyn_storage)": {
            "label": "mapping(address => struct TaxableRouter.Tax[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AccumulatedTax)4060_storage)": {
            "label": "mapping(address => struct TaxableRouter.AccumulatedTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)4099_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(AccumulatedTax)4060_storage": {
            "label": "struct TaxableRouter.AccumulatedTax",
            "members": [
              {
                "label": "totalOutTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalInTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "accumulatedOutTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accumulatedInTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "autoClaimAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimCounter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Tax)4047_storage": {
            "label": "struct TaxableRouter.Tax",
            "members": [
              {
                "label": "outTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)4099_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 21,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c726c3ab9ca69dd7a03b9e135563cbf12961e6a78c68dcf169afb9781fd6b54a": {
      "address": "0x15D15b9Ec52D22F33430Fe8E9a26568C58e1C5A4",
      "txHash": "0x9139d80f922daf3fdf59c8094d54295c0ade181c178b951c036ef99ee696aa83",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "tokenETHTaxes",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_array(t_struct(Tax)4047_storage)dyn_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:34"
          },
          {
            "label": "tokenETHTotalTaxes",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(AccumulatedTax)4060_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:36"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:38"
          },
          {
            "label": "tokenETHBaseTax",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)4099_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:55"
          },
          {
            "label": "totalETHTaxEarned",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:110"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:111"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Tax)4047_storage)dyn_storage": {
            "label": "struct TaxableRouter.Tax[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Tax)4047_storage)dyn_storage)": {
            "label": "mapping(address => struct TaxableRouter.Tax[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AccumulatedTax)4060_storage)": {
            "label": "mapping(address => struct TaxableRouter.AccumulatedTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)4099_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(AccumulatedTax)4060_storage": {
            "label": "struct TaxableRouter.AccumulatedTax",
            "members": [
              {
                "label": "totalOutTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalInTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "accumulatedOutTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accumulatedInTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "autoClaimAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimCounter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Tax)4047_storage": {
            "label": "struct TaxableRouter.Tax",
            "members": [
              {
                "label": "outTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)4099_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 21,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "006d5bce35c1e0af4797d05324b500965fc2f700a2f170fe4a583de79f341722": {
      "address": "0x214B6Efa7e8813f07E78e7D3934819a715b6C154",
      "txHash": "0x1820c09c187be3c25ee10dbcbb2eb0c8ba394fe788066679fd5fbfa54bbea4cc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "tokenETHTaxes",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_array(t_struct(Tax)4047_storage)dyn_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:34"
          },
          {
            "label": "tokenETHTotalTaxes",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(AccumulatedTax)4060_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:36"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:38"
          },
          {
            "label": "tokenETHBaseTax",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)4098_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:55"
          },
          {
            "label": "totalETHTaxEarned",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:110"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:111"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Tax)4047_storage)dyn_storage": {
            "label": "struct TaxableRouter.Tax[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Tax)4047_storage)dyn_storage)": {
            "label": "mapping(address => struct TaxableRouter.Tax[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AccumulatedTax)4060_storage)": {
            "label": "mapping(address => struct TaxableRouter.AccumulatedTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)4098_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(AccumulatedTax)4060_storage": {
            "label": "struct TaxableRouter.AccumulatedTax",
            "members": [
              {
                "label": "totalOutTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalInTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "accumulatedOutTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accumulatedInTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "autoClaimAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimCounter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Tax)4047_storage": {
            "label": "struct TaxableRouter.Tax",
            "members": [
              {
                "label": "outTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)4098_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 21,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c4f5933e9a57c7835b5587b52799c571ad430a2d492c4a5e65fbee648187a422": {
      "address": "0xa1f3B6554af357daD9981e88369120513a8cf1D7",
      "txHash": "0x6ce30d07f6a8c58c5a283e6d0c9c1b84f5034f69cb702f864889901d18a85b15",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "tokenETHTaxes",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_array(t_struct(Tax)4047_storage)dyn_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:34"
          },
          {
            "label": "tokenETHTotalTaxes",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(AccumulatedTax)4060_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:36"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:38"
          },
          {
            "label": "tokenETHBaseTax",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)4098_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:55"
          },
          {
            "label": "totalETHTaxEarned",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:110"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:111"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Tax)4047_storage)dyn_storage": {
            "label": "struct TaxableRouter.Tax[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Tax)4047_storage)dyn_storage)": {
            "label": "mapping(address => struct TaxableRouter.Tax[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AccumulatedTax)4060_storage)": {
            "label": "mapping(address => struct TaxableRouter.AccumulatedTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)4098_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(AccumulatedTax)4060_storage": {
            "label": "struct TaxableRouter.AccumulatedTax",
            "members": [
              {
                "label": "totalOutTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalInTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "accumulatedOutTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accumulatedInTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "autoClaimAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimCounter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Tax)4047_storage": {
            "label": "struct TaxableRouter.Tax",
            "members": [
              {
                "label": "outTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)4098_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 21,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ce31b5d613d73dd30c4c1792d10a6f7f70d00ac0bb9f6e58642815d4f4db6e05": {
      "address": "0x6687B2680277154b36e97a5c066e58BCC585bfB4",
      "txHash": "0xf38c8e971f2ee5b65c963975da973fa0f4744c39cfd408d459fa6e8b655d2d8d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "tokenETHTaxes",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_array(t_struct(Tax)11568_storage)dyn_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:35"
          },
          {
            "label": "tokenETHTotalTaxes",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(AccumulatedTax)11583_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:37"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:39"
          },
          {
            "label": "tokenETHBaseTax",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)11621_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:56"
          },
          {
            "label": "totalETHTaxEarned",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:58"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:110"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:111"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:112"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Tax)11568_storage)dyn_storage": {
            "label": "struct TaxableRouter.Tax[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Tax)11568_storage)dyn_storage)": {
            "label": "mapping(address => struct TaxableRouter.Tax[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AccumulatedTax)11583_storage)": {
            "label": "mapping(address => struct TaxableRouter.AccumulatedTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)11621_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(AccumulatedTax)11583_storage": {
            "label": "struct TaxableRouter.AccumulatedTax",
            "members": [
              {
                "label": "totalOutTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalInTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "accumulatedOutTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accumulatedInTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "autoClaimAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimCounter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "totalTaxesClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Tax)11568_storage": {
            "label": "struct TaxableRouter.Tax",
            "members": [
              {
                "label": "outTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)11621_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 21,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e2e09c3ea7be821f636ff9cde13fc73d6efce9e918d73b70136769491836e573": {
      "address": "0xE711D756179F157c29bAec6e4B3210F032768a9b",
      "txHash": "0xf20c96509b671881dd73d6661e00272d3b8fd482f21a6a925614ef58bf127b36",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "tokenTaxes",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_struct(Tax)10137_storage)dyn_storage))",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:42"
          },
          {
            "label": "tokenTotalTaxes",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(AccumulatedTax)10152_storage))",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:44"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:46"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)10192_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:62"
          },
          {
            "label": "routerTaxesEarned",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:31"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:32"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Tax)10137_storage)dyn_storage": {
            "label": "struct TaxableRouter.Tax[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Tax)10137_storage)dyn_storage)": {
            "label": "mapping(address => struct TaxableRouter.Tax[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_struct(Tax)10137_storage)dyn_storage))": {
            "label": "mapping(address => mapping(address => struct TaxableRouter.Tax[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(AccumulatedTax)10152_storage))": {
            "label": "mapping(address => mapping(address => struct TaxableRouter.AccumulatedTax))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AccumulatedTax)10152_storage)": {
            "label": "mapping(address => struct TaxableRouter.AccumulatedTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)10192_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AccumulatedTax)10152_storage": {
            "label": "struct TaxableRouter.AccumulatedTax",
            "members": [
              {
                "label": "totalOutTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalInTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "outTaxClaimable",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "inTaxClaimable",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "autoClaimAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimCounter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "totalTaxesClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Tax)10137_storage": {
            "label": "struct TaxableRouter.Tax",
            "members": [
              {
                "label": "outTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)10192_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5542cf4c6232f61db252f1d9fab5d91c6ea9f22fe4c587bf6b69b0d7ad898efc": {
      "address": "0x437C348115E5695429217e0C327e51356cf42984",
      "txHash": "0x2c6b04a5431867540fdebddc27599868ee70ec9cb2cbc6e954933dce3faf3873",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "tokenTaxes",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_struct(Tax)3331_storage)dyn_storage))",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:42"
          },
          {
            "label": "tokenTotalTaxes",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(AccumulatedTax)3346_storage))",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:44"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:46"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)3386_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:62"
          },
          {
            "label": "routerTaxesEarned",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:31"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:32"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Tax)3331_storage)dyn_storage": {
            "label": "struct TaxableRouter.Tax[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Tax)3331_storage)dyn_storage)": {
            "label": "mapping(address => struct TaxableRouter.Tax[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_struct(Tax)3331_storage)dyn_storage))": {
            "label": "mapping(address => mapping(address => struct TaxableRouter.Tax[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(AccumulatedTax)3346_storage))": {
            "label": "mapping(address => mapping(address => struct TaxableRouter.AccumulatedTax))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AccumulatedTax)3346_storage)": {
            "label": "mapping(address => struct TaxableRouter.AccumulatedTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)3386_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AccumulatedTax)3346_storage": {
            "label": "struct TaxableRouter.AccumulatedTax",
            "members": [
              {
                "label": "totalOutTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalInTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "outTaxClaimable",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "inTaxClaimable",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "autoClaimAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimCounter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "totalTaxesClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Tax)3331_storage": {
            "label": "struct TaxableRouter.Tax",
            "members": [
              {
                "label": "outTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)3386_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c1fe5609919f749628fbc0256bfa9680295f45af423547ffd1926ac93da497c3": {
      "address": "0xC2f5C2A03e3670F27e38978FbF8d6bA3cBb5E391",
      "txHash": "0x251393c790064e5fbbbf38602119d654a9679f21adcdb2099541c9e4a1eb3e94",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "tokenTaxes",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_struct(Tax)3315_storage)dyn_storage))",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:42"
          },
          {
            "label": "tokenTotalTaxes",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(AccumulatedTax)3330_storage))",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:44"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:46"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)3370_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:62"
          },
          {
            "label": "routerTaxesEarned",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:31"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:32"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Tax)3315_storage)dyn_storage": {
            "label": "struct TaxableRouter.Tax[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Tax)3315_storage)dyn_storage)": {
            "label": "mapping(address => struct TaxableRouter.Tax[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_struct(Tax)3315_storage)dyn_storage))": {
            "label": "mapping(address => mapping(address => struct TaxableRouter.Tax[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(AccumulatedTax)3330_storage))": {
            "label": "mapping(address => mapping(address => struct TaxableRouter.AccumulatedTax))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AccumulatedTax)3330_storage)": {
            "label": "mapping(address => struct TaxableRouter.AccumulatedTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)3370_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AccumulatedTax)3330_storage": {
            "label": "struct TaxableRouter.AccumulatedTax",
            "members": [
              {
                "label": "totalOutTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalInTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "outTaxClaimable",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "inTaxClaimable",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "autoClaimAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimCounter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "totalTaxesClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Tax)3315_storage": {
            "label": "struct TaxableRouter.Tax",
            "members": [
              {
                "label": "outTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)3370_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "776d2781cf501f566a4baa31fa4e4a7e39357bdf7b9a3f0b46c9cc27d4178333": {
      "address": "0xaF8363c93C1bd6b8a0b5769d7B97d564CB47cd40",
      "txHash": "0x9d0a2b9ee8209d5774870c02abffb27ee87ab1e56a2d70dee84413a9a55fd1c6",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "tokenTaxes",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_struct(Tax)3316_storage)dyn_storage))",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:42"
          },
          {
            "label": "tokenTotalTaxes",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(AccumulatedTax)3331_storage))",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:44"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:46"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)3371_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:62"
          },
          {
            "label": "routerTaxesEarned",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:31"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:32"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Tax)3316_storage)dyn_storage": {
            "label": "struct TaxableRouter.Tax[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Tax)3316_storage)dyn_storage)": {
            "label": "mapping(address => struct TaxableRouter.Tax[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_struct(Tax)3316_storage)dyn_storage))": {
            "label": "mapping(address => mapping(address => struct TaxableRouter.Tax[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(AccumulatedTax)3331_storage))": {
            "label": "mapping(address => mapping(address => struct TaxableRouter.AccumulatedTax))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AccumulatedTax)3331_storage)": {
            "label": "mapping(address => struct TaxableRouter.AccumulatedTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)3371_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AccumulatedTax)3331_storage": {
            "label": "struct TaxableRouter.AccumulatedTax",
            "members": [
              {
                "label": "totalOutTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalInTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "outTaxClaimable",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "inTaxClaimable",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "autoClaimAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimCounter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "totalTaxesClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Tax)3316_storage": {
            "label": "struct TaxableRouter.Tax",
            "members": [
              {
                "label": "outTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)3371_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "03875a9c3caaa5467ae5cb19d78ecf49cabd5f369053dd05ada79aec18c375c8": {
      "address": "0xecAAeA2504EF744eAFb3017525963888374ba145",
      "txHash": "0xb187346797edf6a17782b025c18238f26864e90a6d8b2fb4e207d9fb14620b67",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "tokenTaxes",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_address,t_array(t_struct(Tax)10196_storage)dyn_storage))",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:42"
          },
          {
            "label": "tokenTotalTaxes",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(AccumulatedTax)10211_storage))",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:44"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:46"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)10251_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:62"
          },
          {
            "label": "routerTaxesEarned",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "256",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:31"
          },
          {
            "label": "factory",
            "offset": 0,
            "slot": "257",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:32"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:33"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Tax)10196_storage)dyn_storage": {
            "label": "struct TaxableRouter.Tax[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_struct(Tax)10196_storage)dyn_storage)": {
            "label": "mapping(address => struct TaxableRouter.Tax[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_array(t_struct(Tax)10196_storage)dyn_storage))": {
            "label": "mapping(address => mapping(address => struct TaxableRouter.Tax[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(AccumulatedTax)10211_storage))": {
            "label": "mapping(address => mapping(address => struct TaxableRouter.AccumulatedTax))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AccumulatedTax)10211_storage)": {
            "label": "mapping(address => struct TaxableRouter.AccumulatedTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)10251_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AccumulatedTax)10211_storage": {
            "label": "struct TaxableRouter.AccumulatedTax",
            "members": [
              {
                "label": "totalOutTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalInTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "outTaxClaimable",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "inTaxClaimable",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "autoClaimAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimCounter",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "totalTaxesClaimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Tax)10196_storage": {
            "label": "struct TaxableRouter.Tax",
            "members": [
              {
                "label": "outTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)10251_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "adf0a4517409afd516c68cc7474758583168a118ffd830cbeddd6eefcf745a1e": {
      "address": "0x6C6385d76cfEC1CAFe79364405EdB1AcEAb9fF64",
      "txHash": "0x239bf82c3cf34cff0bed7a37131b4850c574a8b08251dd4c48fb7f7f19e8e3fc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)5543_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)5543_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)5543_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bd1ae524171d98bfc3cf16d4f99e19e126a36618893eb34f8f8c39fa355c21af": {
      "address": "0xeb7c447A8719BB86b9721e60324CAde60FD67C93",
      "txHash": "0x5cdd7be4449d2845bc9dc83c692f236e0970ecc5d76eff385bfdf65aede46308",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)11706_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)11706_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)11706_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6984a673026d011e456907cd2518ab60b5077fdbdf210625bdfe598990a6b219": {
      "address": "0xad74224eb33e929b8AdD53a2A7d022c3BCF3CdCD",
      "txHash": "0x348079ccb36bf4f3aed7a0a5a3b1de953bae5de2c1cae5b682951d927302def1",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)11710_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)11710_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)11710_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ade9c7880a4ec0a8335101e6aa428515e7901e19a53b37ffae1aab1748d1a034": {
      "address": "0x4C6d2a68c9eAB63ac9FDbE94fB76C870634AbAe8",
      "txHash": "0xf2dd73bbbaea929ca5d58f7c9b1291ddfc64ecc3e5d9a74dd446f5f73898119a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)11691_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)11691_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)11691_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "913e370d82906e72b982662617f7c246502793b1df17f4428a2bd52ef3dc70ac": {
      "address": "0x821524bEcF5fC71B854Ec39c15687DB8c9531Bba",
      "txHash": "0x2c21ff4c338ec7a361150d6d1574957ec67eace4af01d85482fa5395349742bb",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)11696_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)11696_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)11696_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e317aa816b78da45ebb952d772b91a46fbf3a7b21f3804cda3e62baec200b521": {
      "address": "0xf265398Bf901E522E29C320d0e721ac0c1C712Ab",
      "txHash": "0xd93fcfe88631b87ca31c39f0154b6f8cbc7e3cb778c328df33c503357c84e59a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)11701_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)11701_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)11701_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "25bdbc8c7dd1879201ab50299194f290fd20cc2db9ebb1742ca4c898320a3934": {
      "address": "0x017878E8f48CD56030e52E4b7DfCA8c5a252C8e8",
      "txHash": "0x15b6028c6c28261e4954b6d8684953ae4a22a2764f43f905b5b76ac1bf7574a5",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)11696_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)11696_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)11696_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0b2b6e37fc8149883c140124264004da64b806a50d6dd2139b813245d6fb3b2b": {
      "address": "0xb9Ad9CbF5494F41cA61eD852896d4F2Eb1489E8E",
      "txHash": "0x103833009d27f2e75189fcd8de71436b3984888ca99da084813637e678617a36",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)11692_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)11692_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)11692_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1b63d782abace8fd5f73c0de25916eacf9e5ee56cdaf9b9060e77b7fdf9d3a71": {
      "address": "0x2C92dB2f874F4fC5AD017DD4274a06B48Ce654F7",
      "txHash": "0xf8fa2a72ed11dbc8ef2640ba78c7ef462219d25febcaeddb5845e4fda43bb027",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)11708_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)11708_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)11708_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fb1d8b514380199dff81598579bbc3096d2964eedb8ac879573203573576afa4": {
      "address": "0x580e73179F909e9c528f3Dd1E6Ac378D3194310A",
      "txHash": "0x0dc982432b3a28c03267d39629a2dc0bea7931fa154721ab1bd9b7a69fa4cf92",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)11723_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)11723_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)11723_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "99b6e01786d4eb39f842c82a8315922ce9d335888dc9de1bffb8674553c71074": {
      "address": "0xF9851979CA9A9D1822787bc97F640AEa57015A53",
      "txHash": "0xd95ef0cc07fe63dc0110ac013c2a8c007722f802018e35c0326a9cd7f1011262",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)11717_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)11717_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)11717_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d471dc7452e9e75ccdcbcafbf79454fbbf0d53835b63c720039d7088315d28d2": {
      "address": "0x1BC08663284924587d93D42Be3e5aa177D2a2208",
      "txHash": "0x79bf9d3d260e0f5af640bbfe91cee4892b48fee4b4126db432d3fb0904476c9b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)11717_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)11717_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)11717_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a3de1bbad7821deb66951e9624914c22e3a4a03479181060ab02bfe01992da44": {
      "address": "0xd6647935f44D039719dEeF258d086fc3Bb9C7F1d",
      "txHash": "0xfee08b701c503abe8c57e914fb23ab0e3af0e4ebd4bb889f477aacc526175d3f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)11835_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)11835_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)11835_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ead2153ebfb04aff82286f02e73305d81b12391b88d27ab36daa0e67ff77b9bf": {
      "address": "0x7E2818F72d9370B708eE4Bc36B9f69fA420b1e56",
      "txHash": "0xabd229744057e15548331119ad157d9bec6f797ab5b4695c1011d7a4f776d0cb",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)11835_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)11835_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)11835_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d7023b2e6cd18b9fe906f2287bc981a016c5e75add49923248ef0ee629fd929d": {
      "address": "0x731054D5006d96410457d702171A0677E83c0900",
      "txHash": "0x33daa3d8d1408e52d61bddc875350fd328587ee3a56c1a7e06f4671d55225c09",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)14980_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)14980_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)14980_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "32cbfa5e1c48bf9ac3625978b66e41d16d15dfc1c7c76cab4b15644a472e2857": {
      "address": "0x4f403a3D506B613E24A09C7DEb1401b2518Bdf9F",
      "txHash": "0x26f4a0f23c3932d7348f18e3e0d0501965719938125e5f7e904383e0fec7dd02",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)14856_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "87b0a01a7a62437098001589bcb2c3fc519debe90539799247587a25db558acd": {
      "address": "0xa6ebe703AeC836390B3E03294e3Be0BaDe6AbB70",
      "txHash": "0xdee187e2d7858ed7e121e06e1b033b7bf2bcb910018e2f7dd8387a34bbf1a578",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "isTaxablePair",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:10"
          },
          {
            "label": "isExcludedFromRouter",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:11"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:20"
          },
          {
            "label": "buyTax",
            "offset": 0,
            "slot": "304",
            "type": "t_struct(TaxStats)2859_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:27"
          },
          {
            "label": "sellTax",
            "offset": 0,
            "slot": "308",
            "type": "t_struct(TaxStats)2859_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:28"
          },
          {
            "label": "walletSellTaxes",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_address,t_struct(WalletIndividualSellTax)2870_storage)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:34"
          },
          {
            "label": "taxDistribution",
            "offset": 0,
            "slot": "313",
            "type": "t_struct(TaxDistribution)2890_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:41"
          },
          {
            "label": "increaseSellTaxThreshold",
            "offset": 0,
            "slot": "314",
            "type": "t_uint16",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:43"
          },
          {
            "label": "isBlacklisted",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:45"
          },
          {
            "label": "pancakePair",
            "offset": 0,
            "slot": "316",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:47"
          },
          {
            "label": "rewardBalance",
            "offset": 0,
            "slot": "317",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:48"
          },
          {
            "label": "gasForDividends",
            "offset": 0,
            "slot": "318",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:50"
          },
          {
            "label": "dividendTracker",
            "offset": 0,
            "slot": "319",
            "type": "t_contract(CCMDividendTracker)4853",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CCMDividendTracker)4853": {
            "label": "contract CCMDividendTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WalletIndividualSellTax)2870_storage)": {
            "label": "mapping(address => struct CryptoContractManagement.WalletIndividualSellTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TaxDistribution)2890_storage": {
            "label": "struct CryptoContractManagement.TaxDistribution",
            "members": [
              {
                "label": "developmentWallet",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "developmentBuyTax",
                "type": "t_uint16",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "rewardBuyTax",
                "type": "t_uint16",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "autoLiquidityBuyTax",
                "type": "t_uint16",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "developmentSellTax",
                "type": "t_uint16",
                "offset": 26,
                "slot": "0"
              },
              {
                "label": "rewardSellTax",
                "type": "t_uint16",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "autoLiquiditySellTax",
                "type": "t_uint16",
                "offset": 30,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TaxStats)2859_storage": {
            "label": "struct CryptoContractManagement.TaxStats",
            "members": [
              {
                "label": "minTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "currentTax",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "resetTaxAfter",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "taxesEarned",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(WalletIndividualSellTax)2870_storage": {
            "label": "struct CryptoContractManagement.WalletIndividualSellTax",
            "members": [
              {
                "label": "cummulativeSellPercent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "87f6f499eb5cad0486cb7acb09df87e100496d213ec87029235a6cdac836f666": {
      "address": "0x04629fB43cE5f1A5a92e605fc97a9C04DE75Ad05",
      "txHash": "0xa761e25633a2347436ea247d49872cb946c18eb74184e3933c1a480381eae4ce",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)14851_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)14851_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)14851_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "39422e6175458e326fcc6797ff0bab35bef16c995db3abc12b5daa2ca6b48ba4": {
      "address": "0x475f80987ceA3242dFbf75DD4b6cbFFce2ABd2ef",
      "txHash": "0xcdad14d8afffaefd125cead8181235d8b32f11b73a34f9539c38dfef5da3c217",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)5668_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)5668_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)5668_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c4ff679ae298f87e51d3d116ac78d0741f64bb73bbf98de513cf64cbad37340b": {
      "address": "0x392C2f5FD548032e1e8a7b2bB7f4D2e0b0C707A8",
      "txHash": "0xbeb3a5654fd7a7914b6342973f147da5dc48fe2a9e4342f65650c1d2cc99d3fb",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "isTaxablePair",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:10"
          },
          {
            "label": "isExcludedFromRouter",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:11"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:20"
          },
          {
            "label": "buyTax",
            "offset": 0,
            "slot": "304",
            "type": "t_struct(TaxStats)2859_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:27"
          },
          {
            "label": "sellTax",
            "offset": 0,
            "slot": "308",
            "type": "t_struct(TaxStats)2859_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:28"
          },
          {
            "label": "walletSellTaxes",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_address,t_struct(WalletIndividualSellTax)2870_storage)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:34"
          },
          {
            "label": "taxDistribution",
            "offset": 0,
            "slot": "313",
            "type": "t_struct(TaxDistribution)2890_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:41"
          },
          {
            "label": "increaseSellTaxThreshold",
            "offset": 0,
            "slot": "314",
            "type": "t_uint16",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:43"
          },
          {
            "label": "isBlacklisted",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:45"
          },
          {
            "label": "pancakePair",
            "offset": 0,
            "slot": "316",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:47"
          },
          {
            "label": "rewardBalance",
            "offset": 0,
            "slot": "317",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:48"
          },
          {
            "label": "gasForDividends",
            "offset": 0,
            "slot": "318",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:50"
          },
          {
            "label": "dividendTracker",
            "offset": 0,
            "slot": "319",
            "type": "t_contract(CCMDividendTracker)4889",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:51"
          },
          {
            "label": "triggerDividendDistributionAt",
            "offset": 0,
            "slot": "320",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CCMDividendTracker)4889": {
            "label": "contract CCMDividendTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WalletIndividualSellTax)2870_storage)": {
            "label": "mapping(address => struct CryptoContractManagement.WalletIndividualSellTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TaxDistribution)2890_storage": {
            "label": "struct CryptoContractManagement.TaxDistribution",
            "members": [
              {
                "label": "developmentWallet",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "developmentBuyTax",
                "type": "t_uint16",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "rewardBuyTax",
                "type": "t_uint16",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "autoLiquidityBuyTax",
                "type": "t_uint16",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "developmentSellTax",
                "type": "t_uint16",
                "offset": 26,
                "slot": "0"
              },
              {
                "label": "rewardSellTax",
                "type": "t_uint16",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "autoLiquiditySellTax",
                "type": "t_uint16",
                "offset": 30,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TaxStats)2859_storage": {
            "label": "struct CryptoContractManagement.TaxStats",
            "members": [
              {
                "label": "minTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "currentTax",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "resetTaxAfter",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "taxesEarned",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(WalletIndividualSellTax)2870_storage": {
            "label": "struct CryptoContractManagement.WalletIndividualSellTax",
            "members": [
              {
                "label": "cummulativeSellPercent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "42dab1a1813b15383c90e326d337ab80626241ff1ae32b2b33c04b758548002b": {
      "address": "0x97e84254377e9485cba3C225F5264549B6B4Da0a",
      "txHash": "0x8817288b5eb6d75876f85992227708520b53fa4e5511067d9ecbee0e9f507abd",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "isTaxablePair",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:10"
          },
          {
            "label": "isExcludedFromRouter",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:11"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:20"
          },
          {
            "label": "buyTax",
            "offset": 0,
            "slot": "304",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:27"
          },
          {
            "label": "sellTax",
            "offset": 0,
            "slot": "308",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:28"
          },
          {
            "label": "walletSellTaxes",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:34"
          },
          {
            "label": "taxDistribution",
            "offset": 0,
            "slot": "313",
            "type": "t_struct(TaxDistribution)3261_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:41"
          },
          {
            "label": "increaseSellTaxThreshold",
            "offset": 0,
            "slot": "314",
            "type": "t_uint16",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:43"
          },
          {
            "label": "isBlacklisted",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:45"
          },
          {
            "label": "pancakePair",
            "offset": 0,
            "slot": "316",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:47"
          },
          {
            "label": "rewardBalance",
            "offset": 0,
            "slot": "317",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:48"
          },
          {
            "label": "gasForDividends",
            "offset": 0,
            "slot": "318",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:50"
          },
          {
            "label": "dividendTracker",
            "offset": 0,
            "slot": "319",
            "type": "t_contract(CCMDividendTracker)5265",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:51"
          },
          {
            "label": "triggerDividendDistributionAt",
            "offset": 0,
            "slot": "320",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CCMDividendTracker)5265": {
            "label": "contract CCMDividendTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)": {
            "label": "mapping(address => struct CryptoContractManagement.WalletIndividualSellTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TaxDistribution)3261_storage": {
            "label": "struct CryptoContractManagement.TaxDistribution",
            "members": [
              {
                "label": "developmentWallet",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "developmentBuyTax",
                "type": "t_uint16",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "rewardBuyTax",
                "type": "t_uint16",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "autoLiquidityBuyTax",
                "type": "t_uint16",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "developmentSellTax",
                "type": "t_uint16",
                "offset": 26,
                "slot": "0"
              },
              {
                "label": "rewardSellTax",
                "type": "t_uint16",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "autoLiquiditySellTax",
                "type": "t_uint16",
                "offset": 30,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TaxStats)3230_storage": {
            "label": "struct CryptoContractManagement.TaxStats",
            "members": [
              {
                "label": "minTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "currentTax",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "resetTaxAfter",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "taxesEarned",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(WalletIndividualSellTax)3241_storage": {
            "label": "struct CryptoContractManagement.WalletIndividualSellTax",
            "members": [
              {
                "label": "cummulativeSellPercent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "601b9fca048fde51c5930cb29e395eeebfa2ec80a51e7bdbe8f99e25f7813e09": {
      "address": "0x7c22F63C64f3830CEB2ccAD16265722DaF91c337",
      "txHash": "0x233a40391a420f300d9c1044ea477aae58747d0978e89997bf668604dbb0235e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "isTaxablePair",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:10"
          },
          {
            "label": "isExcludedFromRouter",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:11"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:20"
          },
          {
            "label": "buyTax",
            "offset": 0,
            "slot": "304",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:27"
          },
          {
            "label": "sellTax",
            "offset": 0,
            "slot": "308",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:28"
          },
          {
            "label": "walletSellTaxes",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:34"
          },
          {
            "label": "taxDistribution",
            "offset": 0,
            "slot": "313",
            "type": "t_struct(TaxDistribution)3261_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:41"
          },
          {
            "label": "increaseSellTaxThreshold",
            "offset": 0,
            "slot": "314",
            "type": "t_uint16",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:43"
          },
          {
            "label": "isBlacklisted",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:45"
          },
          {
            "label": "pancakePair",
            "offset": 0,
            "slot": "316",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:47"
          },
          {
            "label": "rewardBalance",
            "offset": 0,
            "slot": "317",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:48"
          },
          {
            "label": "gasForDividends",
            "offset": 0,
            "slot": "318",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:50"
          },
          {
            "label": "dividendTracker",
            "offset": 0,
            "slot": "319",
            "type": "t_contract(CCMDividendTracker)5270",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:51"
          },
          {
            "label": "triggerDividendDistributionAt",
            "offset": 0,
            "slot": "320",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CCMDividendTracker)5270": {
            "label": "contract CCMDividendTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)": {
            "label": "mapping(address => struct CryptoContractManagement.WalletIndividualSellTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TaxDistribution)3261_storage": {
            "label": "struct CryptoContractManagement.TaxDistribution",
            "members": [
              {
                "label": "developmentWallet",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "developmentBuyTax",
                "type": "t_uint16",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "rewardBuyTax",
                "type": "t_uint16",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "autoLiquidityBuyTax",
                "type": "t_uint16",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "developmentSellTax",
                "type": "t_uint16",
                "offset": 26,
                "slot": "0"
              },
              {
                "label": "rewardSellTax",
                "type": "t_uint16",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "autoLiquiditySellTax",
                "type": "t_uint16",
                "offset": 30,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TaxStats)3230_storage": {
            "label": "struct CryptoContractManagement.TaxStats",
            "members": [
              {
                "label": "minTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "currentTax",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "resetTaxAfter",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "taxesEarned",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(WalletIndividualSellTax)3241_storage": {
            "label": "struct CryptoContractManagement.WalletIndividualSellTax",
            "members": [
              {
                "label": "cummulativeSellPercent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "237954ba8b5d1d052a66497abd8b7281805b641676faa9d3bd81686cb8d2407c": {
      "address": "0x38a849Af70C51fbCD294246ED2B1e0C171536D38",
      "txHash": "0x1582963dda49ebe8c639756c268a8b7e392fb68898ea8187562c02ebdaf572fe",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "isTaxablePair",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:10"
          },
          {
            "label": "isExcludedFromRouter",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:11"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:20"
          },
          {
            "label": "buyTax",
            "offset": 0,
            "slot": "304",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:27"
          },
          {
            "label": "sellTax",
            "offset": 0,
            "slot": "308",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:28"
          },
          {
            "label": "walletSellTaxes",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:34"
          },
          {
            "label": "taxDistribution",
            "offset": 0,
            "slot": "313",
            "type": "t_struct(TaxDistribution)3261_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:41"
          },
          {
            "label": "increaseSellTaxThreshold",
            "offset": 0,
            "slot": "314",
            "type": "t_uint16",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:43"
          },
          {
            "label": "isBlacklisted",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:45"
          },
          {
            "label": "pancakePair",
            "offset": 0,
            "slot": "316",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:47"
          },
          {
            "label": "rewardBalance",
            "offset": 0,
            "slot": "317",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:48"
          },
          {
            "label": "gasForDividends",
            "offset": 0,
            "slot": "318",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:50"
          },
          {
            "label": "dividendTracker",
            "offset": 0,
            "slot": "319",
            "type": "t_contract(CCMDividendTracker)5275",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:51"
          },
          {
            "label": "triggerDividendDistributionAt",
            "offset": 0,
            "slot": "320",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CCMDividendTracker)5275": {
            "label": "contract CCMDividendTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)": {
            "label": "mapping(address => struct CryptoContractManagement.WalletIndividualSellTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TaxDistribution)3261_storage": {
            "label": "struct CryptoContractManagement.TaxDistribution",
            "members": [
              {
                "label": "developmentWallet",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "developmentBuyTax",
                "type": "t_uint16",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "rewardBuyTax",
                "type": "t_uint16",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "autoLiquidityBuyTax",
                "type": "t_uint16",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "developmentSellTax",
                "type": "t_uint16",
                "offset": 26,
                "slot": "0"
              },
              {
                "label": "rewardSellTax",
                "type": "t_uint16",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "autoLiquiditySellTax",
                "type": "t_uint16",
                "offset": 30,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TaxStats)3230_storage": {
            "label": "struct CryptoContractManagement.TaxStats",
            "members": [
              {
                "label": "minTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "currentTax",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "resetTaxAfter",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "taxesEarned",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(WalletIndividualSellTax)3241_storage": {
            "label": "struct CryptoContractManagement.WalletIndividualSellTax",
            "members": [
              {
                "label": "cummulativeSellPercent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "dd6b83a39afa263d8ae69a56df893c3de7e0675e1673656f8c64a2bc7c40691c": {
      "address": "0x9847639DA37c65792e5E1da3d8b825c284F2C82F",
      "txHash": "0x67f644db94b1b3c4f4c949f4b7d5446b26605bd434f65fcd8e68c304b7cb9922",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)14856_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "99e50a4191e348cbc6cc3a00c7ea345829987104af6ee1494f61e6b9500b6147": {
      "address": "0x43193E783Afdf9afCc7D41DbC03D82869C705135",
      "txHash": "0x406adc74e74987941d324148cec7dfa2c4dd1b31d4fde6913bd0620f1f9c84b1",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)14856_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d984b4a3609c0e0caee4cafa37377f0a21b1375dd1efcaeecd973848ba754741": {
      "address": "0x2B0B22B239b9Fca416Af25E2eCBdc64749fE8556",
      "txHash": "0xc9adf4a6bfdda4917cb7f3ae08753d55497cb605dd7b56ea715d3877f4bc650b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)14856_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5105954378ce25a965aede67aabd6097aec73b7aa3692c4879980cbb033e9358": {
      "address": "0xf51c1dAA3DCdd77e87267059C6552bDE48800711",
      "txHash": "0xfff3fb60de66c11c6a5b8da39f3f98b0b43e5645c9764705b61ce608d6e5a4d6",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)14856_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "418fbbb6ace8c1b545dd59db806fbf639fe00ac17dae42326cd99b5ee45129a8": {
      "address": "0x7750ab7bA1052Da1056094dC5819e2b1C7Db2843",
      "txHash": "0x9df1a6000577a0027bce48ed7d9789ab8e23732f3065d1d91261b0e7cd8bb892",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "isTaxablePair",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:10"
          },
          {
            "label": "isExcludedFromRouter",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:11"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:20"
          },
          {
            "label": "buyTax",
            "offset": 0,
            "slot": "304",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:27"
          },
          {
            "label": "sellTax",
            "offset": 0,
            "slot": "308",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:28"
          },
          {
            "label": "walletSellTaxes",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:34"
          },
          {
            "label": "taxDistribution",
            "offset": 0,
            "slot": "313",
            "type": "t_struct(TaxDistribution)3261_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:41"
          },
          {
            "label": "increaseSellTaxThreshold",
            "offset": 0,
            "slot": "314",
            "type": "t_uint16",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:43"
          },
          {
            "label": "isBlacklisted",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:45"
          },
          {
            "label": "pancakePair",
            "offset": 0,
            "slot": "316",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:47"
          },
          {
            "label": "rewardBalance",
            "offset": 0,
            "slot": "317",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:48"
          },
          {
            "label": "gasForDividends",
            "offset": 0,
            "slot": "318",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:50"
          },
          {
            "label": "dividendTracker",
            "offset": 0,
            "slot": "319",
            "type": "t_contract(CCMDividendTracker)5265",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:51"
          },
          {
            "label": "triggerDividendDistributionAt",
            "offset": 0,
            "slot": "320",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CCMDividendTracker)5265": {
            "label": "contract CCMDividendTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)": {
            "label": "mapping(address => struct CryptoContractManagement.WalletIndividualSellTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TaxDistribution)3261_storage": {
            "label": "struct CryptoContractManagement.TaxDistribution",
            "members": [
              {
                "label": "developmentWallet",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "developmentBuyTax",
                "type": "t_uint16",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "rewardBuyTax",
                "type": "t_uint16",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "autoLiquidityBuyTax",
                "type": "t_uint16",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "developmentSellTax",
                "type": "t_uint16",
                "offset": 26,
                "slot": "0"
              },
              {
                "label": "rewardSellTax",
                "type": "t_uint16",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "autoLiquiditySellTax",
                "type": "t_uint16",
                "offset": 30,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TaxStats)3230_storage": {
            "label": "struct CryptoContractManagement.TaxStats",
            "members": [
              {
                "label": "minTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "currentTax",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "resetTaxAfter",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "taxesEarned",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(WalletIndividualSellTax)3241_storage": {
            "label": "struct CryptoContractManagement.WalletIndividualSellTax",
            "members": [
              {
                "label": "cummulativeSellPercent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f1cbdc88610f905922bf7cf7b2360cf74605a3e679fe9cd8819b0b3144f2835d": {
      "address": "0xcb99078461A85CE8f9c70F2c7904c65A8c7323f9",
      "txHash": "0x782669e75508df05b39a00c265d3bd0b52ee2a18fcb34142ffc975f2178d57c3",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "isTaxablePair",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:10"
          },
          {
            "label": "isExcludedFromRouter",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:11"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:20"
          },
          {
            "label": "buyTax",
            "offset": 0,
            "slot": "304",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:27"
          },
          {
            "label": "sellTax",
            "offset": 0,
            "slot": "308",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:28"
          },
          {
            "label": "walletSellTaxes",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:34"
          },
          {
            "label": "taxDistribution",
            "offset": 0,
            "slot": "313",
            "type": "t_struct(TaxDistribution)3261_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:41"
          },
          {
            "label": "increaseSellTaxThreshold",
            "offset": 0,
            "slot": "314",
            "type": "t_uint16",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:43"
          },
          {
            "label": "isBlacklisted",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:45"
          },
          {
            "label": "pancakePair",
            "offset": 0,
            "slot": "316",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:47"
          },
          {
            "label": "rewardBalance",
            "offset": 0,
            "slot": "317",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:48"
          },
          {
            "label": "gasForDividends",
            "offset": 0,
            "slot": "318",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:50"
          },
          {
            "label": "dividendTracker",
            "offset": 0,
            "slot": "319",
            "type": "t_contract(CCMDividendTracker)5265",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:51"
          },
          {
            "label": "triggerDividendDistributionAt",
            "offset": 0,
            "slot": "320",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CCMDividendTracker)5265": {
            "label": "contract CCMDividendTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)": {
            "label": "mapping(address => struct CryptoContractManagement.WalletIndividualSellTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TaxDistribution)3261_storage": {
            "label": "struct CryptoContractManagement.TaxDistribution",
            "members": [
              {
                "label": "developmentWallet",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "developmentBuyTax",
                "type": "t_uint16",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "rewardBuyTax",
                "type": "t_uint16",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "autoLiquidityBuyTax",
                "type": "t_uint16",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "developmentSellTax",
                "type": "t_uint16",
                "offset": 26,
                "slot": "0"
              },
              {
                "label": "rewardSellTax",
                "type": "t_uint16",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "autoLiquiditySellTax",
                "type": "t_uint16",
                "offset": 30,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TaxStats)3230_storage": {
            "label": "struct CryptoContractManagement.TaxStats",
            "members": [
              {
                "label": "minTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "currentTax",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "resetTaxAfter",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "taxesEarned",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(WalletIndividualSellTax)3241_storage": {
            "label": "struct CryptoContractManagement.WalletIndividualSellTax",
            "members": [
              {
                "label": "cummulativeSellPercent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2b02163bb8a6c96f27ffdade6a578fd10a3f54d8ee298afb1cd12d9fb5680fcd": {
      "address": "0x44059C80055386a2FaDD7b831591c70E1CD74fE5",
      "txHash": "0xbf66f426512084d6c6eea0ade55c133378cfe379a64a8b63693f1873d32561f9",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)14856_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c623908263493047934159b2556de66d446cf47b00aa806d202ee4d756951658": {
      "address": "0xa0Ed832D2F89d731Aa1bC63059cC6B686Ae99183",
      "txHash": "0xaa150e86bac10543458b5255f1aa183d2a3f797009419c658a93cdbad88b30aa",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)14856_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1904fffed21e3d14d7410150b18dc021625fb32c405055cf28bc8d9501430ba5": {
      "address": "0x9C5cFAd44722929984e843E3Dd259838169af84d",
      "txHash": "0xf7c826f68fc092bb0ca3c12bf8187a68ed33fb9891bdace0dc2a65be162e3a9c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)14856_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "330e77c8d57abdd2c3cfe885657e9620211fc7a87987a846a206fc329aef8538": {
      "address": "0x994d0b9ae829742096BeBeF172cC3E9caa4907eC",
      "txHash": "0xcd869b72dba22b20072823b3094953fbfce8b8e5f093502c0eb54e78472fc5c7",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)14856_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d8c0816bdaedec9b189d17f8716a35653f5b4ffd04c190ac7204498cfca4e7d6": {
      "address": "0x4ffC6086070304e4a3acF95da7D2C1Bc5e5DA32e",
      "txHash": "0x9757db14bb87a9f0ae1df3381335b776fb86333caea58656ecec1231ee80995a",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)14856_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "62ca72a7a5961a7d8c85a7e225975b74127be1bf25f941c9df08f0d0ec4da155": {
      "address": "0xec1C85708aaf707112a2e6DED6504298c60A8518",
      "txHash": "0xa1f176ca85cc3d8f272c9a9fef7e4c76fe04b09c3e842c12aa9353a0e3860490",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)14856_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e27ddb5c692e7d5e8d5a9a01a2396a68b85d1c7ade8f24d347f100fb72ec7cbf": {
      "address": "0x2a4B91aaFb2C60d05cCD88175BaE77b5A1d458EB",
      "txHash": "0x873e390b7a9e8d1f3c75211d7589479a9262929e985e6f4678642570beb4e472",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)14856_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8eeb0d9602f1a0994f8e2010c27d1830a868456724b8352c6a87ff2bb2bbbbb8": {
      "address": "0xc36685848D98DF0743F33A0AC5774cB280DAB632",
      "txHash": "0x72109ee47b367d15712413295febcab2b7d43bedb735cd8a4a8efbe29560e5ed",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)14856_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6c77ce9da2509437872d22b263a12f029a70d4b84e074b8f7049966d9d5b4ba2": {
      "address": "0x1457a857ee6529C854642F53478B2bD150F83ec7",
      "txHash": "0x2d8fd5e9c9bfa54eaf23ee363abd071e3d9f01fcc7020f44b5f0fa923437d01e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)14856_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e1c5562b54d0e7973815b025bc665e577816e35346309cee6c56be0919621a72": {
      "address": "0x930C939Ef6a154f6e1edAB93607F1470cEB107F5",
      "txHash": "0x98efb93b0f43124fe447b2eb4b6398bd87e2abd9759b6dc8baf79857d30f4fe3",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)14856_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1dcec12950abcdbe4b1d7068bd76e8241701107b9439e1ac60a9343c34335317": {
      "address": "0xf680b92e8d5C0C74186B9551804f77eF80E6D5B8",
      "txHash": "0xf1133522d725ac4d18eb8a338af3ccd5663e9ed77f5f8d412b03f1349638b463",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)14856_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)14856_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c6101b7444157e826248724ac1923d2460d70974954d492a0836255f003e07fb": {
      "address": "0xDDA57266a8e09c4E2F4f7653056470f54592Ee6D",
      "txHash": "0x5334a1d93b0bf887acd774c6c7fe1b6f37cef936e6933fcd6498372d1c95eadc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "isTaxablePair",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:10"
          },
          {
            "label": "isExcludedFromRouter",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:11"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:20"
          },
          {
            "label": "buyTax",
            "offset": 0,
            "slot": "304",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:27"
          },
          {
            "label": "sellTax",
            "offset": 0,
            "slot": "308",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:28"
          },
          {
            "label": "walletSellTaxes",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:34"
          },
          {
            "label": "taxDistribution",
            "offset": 0,
            "slot": "313",
            "type": "t_struct(TaxDistribution)3261_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:41"
          },
          {
            "label": "increaseSellTaxThreshold",
            "offset": 0,
            "slot": "314",
            "type": "t_uint16",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:43"
          },
          {
            "label": "isBlacklisted",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:45"
          },
          {
            "label": "pancakePair",
            "offset": 0,
            "slot": "316",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:47"
          },
          {
            "label": "rewardBalance",
            "offset": 0,
            "slot": "317",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:48"
          },
          {
            "label": "gasForDividends",
            "offset": 0,
            "slot": "318",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:50"
          },
          {
            "label": "dividendTracker",
            "offset": 0,
            "slot": "319",
            "type": "t_contract(CCMDividendTracker)5265",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:51"
          },
          {
            "label": "triggerDividendDistributionAt",
            "offset": 0,
            "slot": "320",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CCMDividendTracker)5265": {
            "label": "contract CCMDividendTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)": {
            "label": "mapping(address => struct CryptoContractManagement.WalletIndividualSellTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TaxDistribution)3261_storage": {
            "label": "struct CryptoContractManagement.TaxDistribution",
            "members": [
              {
                "label": "developmentWallet",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "developmentBuyTax",
                "type": "t_uint16",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "rewardBuyTax",
                "type": "t_uint16",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "autoLiquidityBuyTax",
                "type": "t_uint16",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "developmentSellTax",
                "type": "t_uint16",
                "offset": 26,
                "slot": "0"
              },
              {
                "label": "rewardSellTax",
                "type": "t_uint16",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "autoLiquiditySellTax",
                "type": "t_uint16",
                "offset": 30,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TaxStats)3230_storage": {
            "label": "struct CryptoContractManagement.TaxStats",
            "members": [
              {
                "label": "minTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "currentTax",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "resetTaxAfter",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "taxesEarned",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(WalletIndividualSellTax)3241_storage": {
            "label": "struct CryptoContractManagement.WalletIndividualSellTax",
            "members": [
              {
                "label": "cummulativeSellPercent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "da7e3811fcd420fee41147d87587be9b8b9832b955c6c66084ff991f8bbf384b": {
      "address": "0x35993a5c113B376Edd8A4A210e6214a71c49362A",
      "txHash": "0x826a49c9c854f28084448e6437c00a2586dc77e5dacb38132574a98dca8d76ad",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "isTaxablePair",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:10"
          },
          {
            "label": "isExcludedFromRouter",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:11"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:20"
          },
          {
            "label": "buyTax",
            "offset": 0,
            "slot": "304",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:27"
          },
          {
            "label": "sellTax",
            "offset": 0,
            "slot": "308",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:28"
          },
          {
            "label": "walletSellTaxes",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:34"
          },
          {
            "label": "taxDistribution",
            "offset": 0,
            "slot": "313",
            "type": "t_struct(TaxDistribution)3261_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:41"
          },
          {
            "label": "increaseSellTaxThreshold",
            "offset": 0,
            "slot": "314",
            "type": "t_uint16",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:43"
          },
          {
            "label": "isBlacklisted",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:45"
          },
          {
            "label": "pancakePair",
            "offset": 0,
            "slot": "316",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:47"
          },
          {
            "label": "rewardBalance",
            "offset": 0,
            "slot": "317",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:48"
          },
          {
            "label": "gasForDividends",
            "offset": 0,
            "slot": "318",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:50"
          },
          {
            "label": "dividendTracker",
            "offset": 0,
            "slot": "319",
            "type": "t_contract(CCMDividendTracker)5260",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:51"
          },
          {
            "label": "triggerDividendDistributionAt",
            "offset": 0,
            "slot": "320",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CCMDividendTracker)5260": {
            "label": "contract CCMDividendTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)": {
            "label": "mapping(address => struct CryptoContractManagement.WalletIndividualSellTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TaxDistribution)3261_storage": {
            "label": "struct CryptoContractManagement.TaxDistribution",
            "members": [
              {
                "label": "developmentWallet",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "developmentBuyTax",
                "type": "t_uint16",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "rewardBuyTax",
                "type": "t_uint16",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "autoLiquidityBuyTax",
                "type": "t_uint16",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "developmentSellTax",
                "type": "t_uint16",
                "offset": 26,
                "slot": "0"
              },
              {
                "label": "rewardSellTax",
                "type": "t_uint16",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "autoLiquiditySellTax",
                "type": "t_uint16",
                "offset": 30,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TaxStats)3230_storage": {
            "label": "struct CryptoContractManagement.TaxStats",
            "members": [
              {
                "label": "minTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "currentTax",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "resetTaxAfter",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "taxesEarned",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(WalletIndividualSellTax)3241_storage": {
            "label": "struct CryptoContractManagement.WalletIndividualSellTax",
            "members": [
              {
                "label": "cummulativeSellPercent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6e3f0bf8ae5a77e487b8093655d6d6f59208bb426e94ce45306a79004e34e626": {
      "address": "0x8c49971fD6Ad9ad7821b19469330ae92F56Fd1E9",
      "txHash": "0x747324d4626c52cf5e546894bf3f17b09f67babd65453e1e9a51746c1489d0ad",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "isTaxablePair",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:10"
          },
          {
            "label": "isExcludedFromRouter",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:11"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:20"
          },
          {
            "label": "buyTax",
            "offset": 0,
            "slot": "304",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:27"
          },
          {
            "label": "sellTax",
            "offset": 0,
            "slot": "308",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:28"
          },
          {
            "label": "walletSellTaxes",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:34"
          },
          {
            "label": "taxDistribution",
            "offset": 0,
            "slot": "313",
            "type": "t_struct(TaxDistribution)3261_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:41"
          },
          {
            "label": "increaseSellTaxThreshold",
            "offset": 0,
            "slot": "314",
            "type": "t_uint16",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:43"
          },
          {
            "label": "isBlacklisted",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:45"
          },
          {
            "label": "pancakePair",
            "offset": 0,
            "slot": "316",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:47"
          },
          {
            "label": "rewardBalance",
            "offset": 0,
            "slot": "317",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:48"
          },
          {
            "label": "gasForDividends",
            "offset": 0,
            "slot": "318",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:50"
          },
          {
            "label": "dividendTracker",
            "offset": 0,
            "slot": "319",
            "type": "t_contract(CCMDividendTracker)5260",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:51"
          },
          {
            "label": "triggerDividendDistributionAt",
            "offset": 0,
            "slot": "320",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CCMDividendTracker)5260": {
            "label": "contract CCMDividendTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)": {
            "label": "mapping(address => struct CryptoContractManagement.WalletIndividualSellTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TaxDistribution)3261_storage": {
            "label": "struct CryptoContractManagement.TaxDistribution",
            "members": [
              {
                "label": "developmentWallet",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "developmentBuyTax",
                "type": "t_uint16",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "rewardBuyTax",
                "type": "t_uint16",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "autoLiquidityBuyTax",
                "type": "t_uint16",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "developmentSellTax",
                "type": "t_uint16",
                "offset": 26,
                "slot": "0"
              },
              {
                "label": "rewardSellTax",
                "type": "t_uint16",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "autoLiquiditySellTax",
                "type": "t_uint16",
                "offset": 30,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TaxStats)3230_storage": {
            "label": "struct CryptoContractManagement.TaxStats",
            "members": [
              {
                "label": "minTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "currentTax",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "resetTaxAfter",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "taxesEarned",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(WalletIndividualSellTax)3241_storage": {
            "label": "struct CryptoContractManagement.WalletIndividualSellTax",
            "members": [
              {
                "label": "cummulativeSellPercent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "668a662f9463da55e02a12432ccac56f5df96e77758ece8ea7df5158e6a4e0c7": {
      "address": "0x7CA491dB9B44F5A91bD01ff921EED559545e013d",
      "txHash": "0x631a77847eac4be11479263b6a8ceaa4bad91f4e507d1ff002cd466ad320060e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "isTaxablePair",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:10"
          },
          {
            "label": "isExcludedFromRouter",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:11"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:20"
          },
          {
            "label": "buyTax",
            "offset": 0,
            "slot": "304",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:27"
          },
          {
            "label": "sellTax",
            "offset": 0,
            "slot": "308",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:28"
          },
          {
            "label": "walletSellTaxes",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:34"
          },
          {
            "label": "taxDistribution",
            "offset": 0,
            "slot": "313",
            "type": "t_struct(TaxDistribution)3261_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:41"
          },
          {
            "label": "increaseSellTaxThreshold",
            "offset": 0,
            "slot": "314",
            "type": "t_uint16",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:43"
          },
          {
            "label": "isBlacklisted",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:45"
          },
          {
            "label": "pancakePair",
            "offset": 0,
            "slot": "316",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:47"
          },
          {
            "label": "rewardBalance",
            "offset": 0,
            "slot": "317",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:48"
          },
          {
            "label": "gasForDividends",
            "offset": 0,
            "slot": "318",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:50"
          },
          {
            "label": "dividendTracker",
            "offset": 0,
            "slot": "319",
            "type": "t_contract(CCMDividendTracker)5260",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:51"
          },
          {
            "label": "triggerDividendDistributionAt",
            "offset": 0,
            "slot": "320",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CCMDividendTracker)5260": {
            "label": "contract CCMDividendTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)": {
            "label": "mapping(address => struct CryptoContractManagement.WalletIndividualSellTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TaxDistribution)3261_storage": {
            "label": "struct CryptoContractManagement.TaxDistribution",
            "members": [
              {
                "label": "developmentWallet",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "developmentBuyTax",
                "type": "t_uint16",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "rewardBuyTax",
                "type": "t_uint16",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "autoLiquidityBuyTax",
                "type": "t_uint16",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "developmentSellTax",
                "type": "t_uint16",
                "offset": 26,
                "slot": "0"
              },
              {
                "label": "rewardSellTax",
                "type": "t_uint16",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "autoLiquiditySellTax",
                "type": "t_uint16",
                "offset": 30,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TaxStats)3230_storage": {
            "label": "struct CryptoContractManagement.TaxStats",
            "members": [
              {
                "label": "minTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "currentTax",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "resetTaxAfter",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "taxesEarned",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(WalletIndividualSellTax)3241_storage": {
            "label": "struct CryptoContractManagement.WalletIndividualSellTax",
            "members": [
              {
                "label": "cummulativeSellPercent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4968431f84521016c686b4d528d840d5223df670f637d03d49f845a601636ea2": {
      "address": "0x0aCdC4ae8E7a37F83B2D8810AF1b24603920d3C5",
      "txHash": "0x33e851ee2f3d5d9d099dcd89a4dd7c62f7b55a47e998fc93db0be9546dfd286d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "151",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "254",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "255",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:394"
          },
          {
            "label": "isTaxablePair",
            "offset": 0,
            "slot": "301",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:10"
          },
          {
            "label": "isExcludedFromRouter",
            "offset": 0,
            "slot": "302",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TaxTokenBase",
            "src": "contracts\\TaxTokenBase.sol:11"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:20"
          },
          {
            "label": "buyTax",
            "offset": 0,
            "slot": "304",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:27"
          },
          {
            "label": "sellTax",
            "offset": 0,
            "slot": "308",
            "type": "t_struct(TaxStats)3230_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:28"
          },
          {
            "label": "walletSellTaxes",
            "offset": 0,
            "slot": "312",
            "type": "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:34"
          },
          {
            "label": "taxDistribution",
            "offset": 0,
            "slot": "313",
            "type": "t_struct(TaxDistribution)3261_storage",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:41"
          },
          {
            "label": "increaseSellTaxThreshold",
            "offset": 0,
            "slot": "314",
            "type": "t_uint16",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:43"
          },
          {
            "label": "isBlacklisted",
            "offset": 0,
            "slot": "315",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:45"
          },
          {
            "label": "pancakePair",
            "offset": 0,
            "slot": "316",
            "type": "t_address",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:47"
          },
          {
            "label": "rewardBalance",
            "offset": 0,
            "slot": "317",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:48"
          },
          {
            "label": "gasForDividends",
            "offset": 0,
            "slot": "318",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:50"
          },
          {
            "label": "dividendTracker",
            "offset": 0,
            "slot": "319",
            "type": "t_contract(CCMDividendTracker)5260",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:51"
          },
          {
            "label": "triggerDividendDistributionAt",
            "offset": 0,
            "slot": "320",
            "type": "t_uint256",
            "contract": "CryptoContractManagement",
            "src": "contracts\\CCM.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CCMDividendTracker)5260": {
            "label": "contract CCMDividendTracker",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(WalletIndividualSellTax)3241_storage)": {
            "label": "mapping(address => struct CryptoContractManagement.WalletIndividualSellTax)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TaxDistribution)3261_storage": {
            "label": "struct CryptoContractManagement.TaxDistribution",
            "members": [
              {
                "label": "developmentWallet",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "developmentBuyTax",
                "type": "t_uint16",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "rewardBuyTax",
                "type": "t_uint16",
                "offset": 22,
                "slot": "0"
              },
              {
                "label": "autoLiquidityBuyTax",
                "type": "t_uint16",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "developmentSellTax",
                "type": "t_uint16",
                "offset": 26,
                "slot": "0"
              },
              {
                "label": "rewardSellTax",
                "type": "t_uint16",
                "offset": 28,
                "slot": "0"
              },
              {
                "label": "autoLiquiditySellTax",
                "type": "t_uint16",
                "offset": 30,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TaxStats)3230_storage": {
            "label": "struct CryptoContractManagement.TaxStats",
            "members": [
              {
                "label": "minTax",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxTax",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "currentTax",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "resetTaxAfter",
                "type": "t_uint32",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "taxesEarned",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(WalletIndividualSellTax)3241_storage": {
            "label": "struct CryptoContractManagement.WalletIndividualSellTax",
            "members": [
              {
                "label": "cummulativeSellPercent",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "lastUpdated",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c8411bd03295d48795726792dbed710f1f5ec2817cda012666cea4a0674764e0": {
      "address": "0x528F2c85F52AD79e19f570896F355099d6225B95",
      "txHash": "0x4abd59ef0ea561956830a81838061c163715969dc10704e2286187887c038623",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)15012_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouter",
            "src": "contracts\\CCMRouter.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)15012_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)15012_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "64c2538b0e5a2a065910a87a984ca72d38d17e8e2deb978a4f30281813547369": {
      "address": "0x7d1c20Bf8e5A212F44bBa87E586BC73961215987",
      "txHash": "0xa9159afd3b6bd83cd971cc39ffdbc51dadffb793645fdc457fc760230e3ad9cd",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)15012_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)15012_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)15012_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "110c413a0e3f235533d8b34b2fa70cfec44672333c60af62e846fd8906a61ac9": {
      "address": "0xB7b26cA104281BB0ca88a1E6F5686B3C66750AD0",
      "txHash": "0x303c131efe7d31b3d5946b82cb27d60c497b473e0a18c4968545a2a8fed73144",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)15021_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)15021_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)15021_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "b6849709017fb3511fce3d5db5c9dc450a1b42bdea653305e6b3b0d17d969703": {
      "address": "0x6bA3A81d1fE68a1334b595454665B51e817A3525",
      "txHash": "0x3ab700fc268e31c9ad132c9041ad1ca8e29197c34d3191b6de60d7fd8df1f63b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "label": "feeOwners",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_address)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:16"
          },
          {
            "label": "tokenBaseTax",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_struct(TokenBaseTax)15019_storage)",
            "contract": "TaxableRouter",
            "src": "contracts\\TaxableRouter.sol:32"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:107"
          },
          {
            "label": "pcsRouter",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:35"
          },
          {
            "label": "pcsFactory",
            "offset": 0,
            "slot": "254",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:36"
          },
          {
            "label": "WETH",
            "offset": 0,
            "slot": "255",
            "type": "t_address",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:37"
          },
          {
            "label": "taxableToken",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CCMRouterV2",
            "src": "contracts\\CCMRouterV2.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(TokenBaseTax)15019_storage)": {
            "label": "mapping(address => struct TaxableRouter.TokenBaseTax)",
            "numberOfBytes": "32"
          },
          "t_struct(TokenBaseTax)15019_storage": {
            "label": "struct TaxableRouter.TokenBaseTax",
            "members": [
              {
                "label": "isActive",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tax",
                "type": "t_uint16",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
